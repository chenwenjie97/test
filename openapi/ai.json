{
    "openapi": "3.1.0",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "https://ai.pmock.com/api",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Ms平台AI开放接口",
            "description": "Ms平台AI开放接口"
        },
        {
            "name": "任务开放接口",
            "description": "任务开放接口"
        }
    ],
    "paths": {
        "/task/result": {
            "post": {
                "summary": "Get task result",
                "description": "get the task execution result through the task ID list",
                "operationId": "getResult",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetApiRecordResultReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelListRecordWyResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/wav/generate": {
            "post": {
                "summary": "SN-Generate wav",
                "description": "create a task to generate wav",
                "operationId": "sunoGenWav",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGenWavReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/upsample/tags": {
            "post": {
                "summary": "SN-Upsample tags",
                "description": "create a task to upsample tags",
                "operationId": "sunoUpsampleTags",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoUpsampleTagsReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/mp4/generate": {
            "post": {
                "summary": "SN-Generate mp4",
                "description": "create a task to generate a video",
                "operationId": "sunoGenMp4",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGenMp4Req"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/lyrics/generate": {
            "post": {
                "summary": "SN-Generate lyrics",
                "description": "create a task to generate lyrics",
                "operationId": "sunoGenLyrics",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGenLyricsReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/get/timeline": {
            "post": {
                "summary": "SN-Get lyrics and audio timeline",
                "description": "create a task to get lyrics and audio timeline",
                "operationId": "sunoGetLATimeline",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGetLATimelineReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/get/downbeats": {
            "post": {
                "summary": "SN-Get downbeats",
                "description": "create a task to get downbeats",
                "operationId": "sunoGetDownbeats",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGetDownbeatsReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/create/persona": {
            "post": {
                "summary": "SN-Create persona",
                "description": "create a task to create persona",
                "operationId": "sunoCreatePersona",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoCreatePersonaReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/audio/upload": {
            "post": {
                "summary": "SN-Upload audio",
                "operationId": "sunoUploadAudio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoUploadAudioReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/audio/generate": {
            "post": {
                "summary": "SN generate audio",
                "description": "create a task to generate audio",
                "operationId": "sunoGenAudio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoGenAudioReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sn/audio/concat": {
            "post": {
                "summary": "SN-Connect audio",
                "description": "create a task to concat audio",
                "operationId": "sunoConcatAudio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SunoConAudioReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/sa/video/generate": {
            "post": {
                "summary": "SA-Generate video",
                "description": "create a task to generate video",
                "operationId": "soraGenVideo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sora2VideoGenReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/gi/video/generate": {
            "post": {
                "summary": "GI-Generate video",
                "description": "create a task to generate audio",
                "operationId": "geminiGenVideo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeminiVeoVideoGenReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/gi/image/generate": {
            "post": {
                "summary": "GI-Generate image",
                "description": "create a task to generate image",
                "operationId": "geminiGenImage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeminiBananaImgGenReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespModelTaskResultRes"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GetApiRecordResultReq": {
                "type": "object",
                "description": "Request parameters for obtaining task results",
                "properties": {
                    "taskIds": {
                        "type": "array",
                        "description": "taskId list",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 50,
                        "maxLength": 50,
                        "minItems": 0,
                        "minLength": 1
                    }
                },
                "required": [
                    "taskIds"
                ]
            },
            "RecordWyResult": {
                "type": "object",
                "additionalProperties": {

                },
                "properties": {
                    
                }
            },
            "RespModelListRecordWyResult": {
                "type": "object",
                "description": "Unified return structure for response results",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Response status code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Response message"
                    },
                    "data": {
                        "type": "array",
                        "description": "Response result",
                        "items": {
                            "$ref": "#/components/schemas/RecordWyResult"
                        }
                    },
                    "traceId": {
                        "type": "string",
                        "description": "Response traceId"
                    }
                }
            },
            "SunoGenWavReq": {
                "type": "object",
                "description": "SN-Generate mp4 request parameters",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "The clip_id which used to generate the music audio continued from existing audio.",
                        "minLength": 1
                    }
                },
                "required": [
                    "clipId"
                ]
            },
            "RespModelTaskResultRes": {
                "type": "object",
                "description": "Unified return structure for response results",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Response status code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Response message"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TaskResultRes",
                        "description": "Response result"
                    },
                    "traceId": {
                        "type": "string",
                        "description": "Response traceId"
                    }
                }
            },
            "TaskResultRes": {
                "type": "object",
                "properties": {
                    "taskId": {
                        "type": "string",
                        "description": "taskId"
                    }
                }
            },
            "SunoUpsampleTagsReq": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Generate image prompt",
                        "minLength": 1
                    }
                },
                "required": [
                    "prompt"
                ]
            },
            "SunoGenMp4Req": {
                "type": "object",
                "description": "SN-Generate mp4 request parameters",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "the clip_id used to generate the music audio is derived from the existing audio.",
                        "minLength": 1
                    }
                },
                "required": [
                    "clipId"
                ]
            },
            "SunoGenLyricsReq": {
                "type": "object",
                "description": "SN-Generate lyrics request parameters",
                "properties": {
                    "lyricsModel": {
                        "type": "string",
                        "description": "model for generating lyrics",
                        "enum": [
                            "default",
                            "remiV1"
                        ],
                        "minLength": 1
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The prompt for generating lyrics",
                        "minLength": 1
                    }
                },
                "required": [
                    "lyricsModel",
                    "prompt"
                ]
            },
            "SunoGetLATimelineReq": {
                "type": "object",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "The clip_id used to generate the music audio is derived from the existing audio.",
                        "minLength": 1
                    }
                },
                "required": [
                    "clipId"
                ]
            },
            "SunoGetDownbeatsReq": {
                "type": "object",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "The clip_id used to generate the music audio is derived from the existing audio.",
                        "minLength": 1
                    }
                },
                "required": [
                    "clipId"
                ]
            },
            "SunoCreatePersonaReq": {
                "type": "object",
                "description": "SN-Create persona request parameters",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "Create clipuid for the role",
                        "minLength": 1
                    },
                    "isPublic": {
                        "type": "string",
                        "description": "Is the role public",
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the character",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of character roles"
                    },
                    "imageS3Id": {
                        "type": "string",
                        "description": "Character image"
                    }
                },
                "required": [
                    "clipId",
                    "isPublic",
                    "name"
                ]
            },
            "SunoUploadAudioReq": {
                "type": "object",
                "properties": {
                    "audioUrl": {
                        "type": "string",
                        "description": "The audio URL that needs to be uploaded must be a URL that we can download.",
                        "minLength": 1
                    }
                },
                "required": [
                    "audioUrl"
                ]
            },
            "Controls": {
                "type": "object",
                "properties": {
                    "styleWeight": {
                        "type": "number",
                        "format": "double",
                        "description": "style_weight(0~1)",
                        "maxLength": 1
                    },
                    "audioWeight": {
                        "type": "number",
                        "format": "double",
                        "description": "audio_weight（0~1）",
                        "maxLength": 1
                    },
                    "weirdnessConstraint": {
                        "type": "number",
                        "format": "double",
                        "description": "weirdness_constraint（0~1）",
                        "maxLength": 1
                    }
                }
            },
            "InfillContextRange": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "integer",
                        "format": "int32",
                        "description": "start time of audio clip (s)"
                    },
                    "end": {
                        "type": "integer",
                        "format": "int32",
                        "description": "the end time of the audio clip (s). Must be greater than or equal to start_2"
                    }
                }
            },
            "Persona": {
                "type": "object",
                "properties": {
                    "personaId": {
                        "type": "string",
                        "description": "artist clip ID is used to imitate this style"
                    },
                    "artistClipId": {
                        "type": "string",
                        "description": "artist/voice character id"
                    }
                }
            },
            "Range": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "integer",
                        "format": "int32",
                        "description": "start time of audio clip (s)"
                    },
                    "end": {
                        "type": "integer",
                        "format": "int32",
                        "description": "the end time of the audio clip (s). Must be greater than or equal to start_2"
                    }
                }
            },
            "SunoGenAudioReq": {
                "type": "object",
                "description": "SN-Generate audio request parameters",
                "properties": {
                    "task": {
                        "type": "string",
                        "description": "Task type",
                        "enum": [
                            "create",
                            "extend",
                            "upload_extend",
                            "upload_cover",
                            "cover",
                            "use_styles_lyrics",
                            "replace_section",
                            "add_instrumental",
                            "add_vocals",
                            "gen_stem_two",
                            "gen_stem_all"
                        ],
                        "example": "create"
                    },
                    "model": {
                        "type": "string",
                        "description": "Model",
                        "enum": [
                            "chirp-v35",
                            "chirp-v40",
                            "chirp-v45",
                            "chirp-45+",
                            "chirp-v45-lite",
                            "chirp-v50"
                        ],
                        "example": "chirp-v35"
                    },
                    "makeInstrumental": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to make musical instruments",
                        "example": false
                    },
                    "prompt": {
                        "type": "string",
                        "description": "If the lyrics prompt is set, the model will create based on the prompt"
                    },
                    "continuedAlignedPrompt": {
                        "type": "string",
                        "description": "Align lyrics for continuation (recommended for task=replace_dection)）"
                    },
                    "infillLyrics": {
                        "type": "string",
                        "description": "Lyrics filling text (used when task=replace_dection)"
                    },
                    "gptDescriptionPrompt": {
                        "type": "string",
                        "description": "Generate lyrics using GPT; Provide only brief descriptive prompts"
                    },
                    "tags": {
                        "type": "string",
                        "description": "Song style tags, comma separated strings or string arrays"
                    },
                    "negativeTags": {
                        "type": "string",
                        "description": "Negative song style labels. Comma separated string or array"
                    },
                    "title": {
                        "type": "string",
                        "description": "Song title"
                    },
                    "clipId": {
                        "type": "string",
                        "description": "clip_id Used to continue or reference from existing audio"
                    },
                    "continueAt": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Continue position in seconds (extend,upload_extend)"
                    },
                    "range": {
                        "$ref": "#/components/schemas/Range",
                        "description": "The target range of replace_dection or add_ * task, end_2 should be>=start_2"
                    },
                    "infillContextRange": {
                        "$ref": "#/components/schemas/InfillContextRange",
                        "description": "only used for the target range of task replace_dection, infill_comtext_range. End_2 should be>=start_2"
                    },
                    "persona": {
                        "$ref": "#/components/schemas/Persona",
                        "description": "artist role configuration. Provide 'persona_id' and 'artist_clip_id' to mimic style"
                    },
                    "controls": {
                        "$ref": "#/components/schemas/Controls",
                        "description": "advanced control through sliders. All values are between 0 and 1. If omitted, use default value"
                    },
                    "vocalGender": {
                        "type": "string",
                        "description": "voice gender",
                        "enum": [
                            "m",
                            "f"
                        ]
                    }
                },
                "required": [
                    "model",
                    "task"
                ]
            },
            "SunoConAudioReq": {
                "type": "object",
                "description": "SN-Upload audio request parameters",
                "properties": {
                    "clipId": {
                        "type": "string",
                        "description": "Audio ID used for connection",
                        "minLength": 1
                    },
                    "isInfill": {
                        "type": "boolean",
                        "description": "Whether to fill in the Replace section when merging. Pass in 'true' and 'edit_dession_id' as a required field"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID"
                    },
                    "editSessionId": {
                        "type": "string",
                        "description": "Whether to fill in the Replace section when merging. Pass in 'true' and 'edit_dession_id' as a required field"
                    }
                },
                "required": [
                    "clipId",
                    "isInfill"
                ]
            },
            "Sora2VideoGenReq": {
                "type": "object",
                "description": "SA-Generate video request parameters",
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "Video generation model, default is sora-2",
                        "enum": [
                            "sora-2",
                            "sora-2-pro"
                        ],
                        "example": "sora-2"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The prompt for generating videos, up to 5000 characters",
                        "maxLength": 5000,
                        "minLength": 0
                    },
                    "images": {
                        "type": "array",
                        "description": "The images used to generate videos can be URL arrays or empty, currently only supporting one image",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 1,
                        "maxLength": 1,
                        "minItems": 0
                    },
                    "orientation": {
                        "type": "string",
                        "default": "landscape",
                        "description": "Direction of video generation, default landscape",
                        "enum": [
                            "landscape",
                            "portrait"
                        ],
                        "example": "landscape"
                    },
                    "size": {
                        "type": "string",
                        "default": "small",
                        "description": "Video generation size, default small, only sora-2-pro, size can be set large",
                        "enum": [
                            "small",
                            "large"
                        ],
                        "example": "small"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32",
                        "default": 10,
                        "description": "The duration of video generation can only be 10 for sora-2, and 10, 15, 25 for sora-2-pro, with a default of 10",
                        "enum": [
                            10,
                            15,
                            25
                        ],
                        "example": 10
                    },
                    "removeWatermark": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to remove watermark, default is false"
                    }
                },
                "required": [
                    "model",
                    "prompt"
                ]
            },
            "GeminiVeoVideoGenReq": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Video generated prompt words, currently only supporting English explanations",
                        "minLength": 1
                    },
                    "action": {
                        "type": "string",
                        "description": "Video operation, one of the following: text2video, img2video, get1080p",
                        "enum": [
                            "text2video",
                            "img2video",
                            "get1080p"
                        ]
                    },
                    "model": {
                        "type": "string",
                        "description": "If the model is veo31_fast_ingredients, an imageList (1-3 http (s) URLs) is required",
                        "enum": [
                            "veo3_fast",
                            "veo2_fast",
                            "veo3_quality",
                            "veo2_quality",
                            "veo31_fast",
                            "veo31_quality",
                            "veo31_fast_ingredients"
                        ]
                    },
                    "videoId": {
                        "type": "string",
                        "description": "VideoId is only required when operating as GET1080P; Otherwise prohibited"
                    },
                    "imageList": {
                        "type": "array",
                        "description": "ImageList is only required when operating as IMG2VIDEO (1-2 http (s) URLs); Otherwise, it must be omitted or an empty array []",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aspectRatio": {
                        "type": "string",
                        "description": "Aspect ratio：16:9、9:16、1:1、3:4、4:3",
                        "enum": [
                            "16:9",
                            "9:16",
                            "1:1",
                            "3:4",
                            "4:3"
                        ]
                    },
                    "translation": {
                        "type": "boolean",
                        "description": "Whether to enable automatic translation of prompt words, default value is false"
                    }
                },
                "required": [
                    "action",
                    "model",
                    "prompt",
                    "translation"
                ]
            },
            "GeminiBananaImgGenReq": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "The prompt words used to generate images",
                        "minLength": 1
                    },
                    "action": {
                        "type": "string",
                        "description": "Action type, edit (modify existing image) or generate (create new image)",
                        "enum": [
                            "edit",
                            "generate"
                        ]
                    },
                    "numImages": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Control the number of output images. Up to 4 sheets, default is 1 sheet",
                        "maxLength": 4,
                        "minLength": 1
                    },
                    "imageUrls": {
                        "type": "array",
                        "description": "The image link that needs to be edited. It can be an accessible HTTP or HTTPS URL, with each image size not exceeding 10MB. If the action is edit, this parameter is required",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aspectRatio": {
                        "type": "string",
                        "default": "1:1",
                        "description": "The aspect ratio of the image is 1:1 by default",
                        "enum": [
                            "21:9",
                            "1:1",
                            "4:3",
                            "3:2",
                            "2:3",
                            "5:4",
                            "4:5",
                            "3:4",
                            "16:9",
                            "9:16"
                        ]
                    }
                },
                "required": [
                    "action",
                    "numImages",
                    "prompt"
                ]
            }
        }
    }
}